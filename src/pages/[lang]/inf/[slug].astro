---
import Layout from '../../../layouts/Influencer/Layout.astro';
import { fetchStrapiGraphQL } from '../../../lib/strapi';
import type { InfluencerResponse, Influencer } from '../../../interfaces/influencer';
import { GET_INFLUENCERS } from '../../../queries/influencer';
import { LOCALES } from '../../../constains';

export async function getStaticPaths() {
  let paths: { params: { lang: string; slug: string }; props: any }[] = [];

  for (const lang of LOCALES) {
    const { influencers } = await fetchStrapiGraphQL<InfluencerResponse>({
      query: GET_INFLUENCERS,
      variables: { locale: lang }
    });

    const localePaths = influencers.map((influencer: Influencer) => ({
      params: { lang, slug: influencer.slug },
      props: influencer,
    }));

    paths = [...paths, ...localePaths];
  }

  return paths;
}


const influencer = Astro.props;
console.log(influencer);
---

<Layout template={influencer?.template_section?.template.slug} influencer={influencer} />