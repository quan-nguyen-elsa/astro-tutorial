---
import Header from "@components/Influencer/ELSAPro/Header";
import type { WebsiteInfo } from '../../interfaces/influencer';
import { GET_SECTIONS } from '../../queries/influencer';
import { fetchStrapiGraphQL } from '../../lib/strapi';
import type { SectionResponse, SectionList } from '../../interfaces/influencer';
import "../../styles/global.css";
import Pricing from '@components/Influencer/ELSAPro/Pricing';
import LearningPath from '@components/Influencer/ELSAPro/LearningPath';
import Comparison from '@components/Influencer/ELSAPro/Comparison';

const { influencer } = Astro.props;


type PaywallProps = {
  paywall: WebsiteInfo;
  catalogs: []
};

const response = await fetch(`https://staging.elsanow.co/product-catalog/v1/site/${influencer.site_code}/paywall`);
const paywall: PaywallProps = await response.json();

const { sections } = await fetchStrapiGraphQL<SectionResponse>({
  query: GET_SECTIONS,
  variables: {
    filters: {
      templates: {
        slug: {
          eq: influencer.template.slug
        }
      }
    }
  }
});

const section_list = sections[0].section_list;
---
<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="stylesheet" href="/styles/influencer-pro.css">
		<meta name="generator" content={Astro.generator} />
		<title>{influencer.title} - Influencer Pro</title>
	</head>
	<body>
		<Header title={influencer.title} description={influencer.description} />
		<Pricing paywall={paywall} />
		{section_list.length && section_list.map((section: SectionList) => {
			if (section.section_name === 'learning-path')
				return <LearningPath section={section} />
			else if (section.section_name === 'comparison')
				return <Comparison section={section} />
		})}
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}
</style>
